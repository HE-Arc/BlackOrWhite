# Generated by Django 2.0.2 on 2018-02-24 15:12

from django.db import migrations, models
import django.db.models.deletion

#------------ Data Migration ------------#
# It's launcher after table migration with 'migrations.RunPython(forwards_func, reverse_func)'

def forwards_func(apps, schema_editor):
    # We get the model from the versioned app registry;
    # if we directly import it, it'll be the wrong version

    #Create the 2
    Camp = apps.get_model("bow", "Camp")
    db_alias = schema_editor.connection.alias
    Camp.objects.using(db_alias).bulk_create([
        Camp(name='Black', description='Ce sont les chevaliers noirs.'),
        Camp(name='White', description='Ce sont les chevaliers blancs.'),
    ])

    Level = apps.get_model("bow", "Level")
    db_alias = schema_editor.connection.alias   #useless and repetitive line?
    Level.objects.using(db_alias).bulk_create([
        Level(name="Apprenti", required_experience=0),
        Level(name="Soldat", required_experience=100),
        Level(name="Champion", required_experience=300),
        Level(name="Maître", required_experience=700),
    ])

    Characters = apps.get_model("bow", "Characters")
    db_alias = schema_editor.connection.alias
    Characters.objects.using(db_alias).bulk_create([
        #Just basic opponents in case that the player is too weak and can't fight anyone
        Characters(name="L'apprenti chevalier noir", strength=5, defense=5, speed=5, agility=5, victories=0, fight_count=0, experience=0, gold=0, camp_id=1, level_id=1),
        Characters(name="L'apprenti chevalier blanc", strength=5, defense=5, speed=5, agility=5, victories=0, fight_count=0, experience=0, gold=0, camp_id=2, level_id=1),
    ])

def reverse_func(apps, schema_editor):
    # forwards_func() creates two Country instances,
    # so reverse_func() should delete them.

    Camp = apps.get_model("bow", "Camp")
    db_alias = schema_editor.connection.alias
    Camp.objects.using(db_alias).filter(name='Black').delete()
    Camp.objects.using(db_alias).filter(name='White').delete()

    Level = apps.get_model("bow", "Level")
    db_alias = schema_editor.connection.alias
    Level.objects.using(db_alias).filter(name='Apprenti').delete()
    Level.objects.using(db_alias).filter(name='Soldat').delete()
    Level.objects.using(db_alias).filter(name='Champion').delete()
    Level.objects.using(db_alias).filter(name='Maître').delete()

    Characters = apps.get_model("bow", "Characters")
    db_alias = schema_editor.connection.alias
    Characters.objects.using(db_alias).filter(name="L'apprenti chevalier blanc").delete()
    Characters.objects.using(db_alias).filter(name="L'apprenti chevalier noir").delete()

#------------ Table migration ------------#

class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField()),
                ('permission_id', models.IntegerField()),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('content_type_id', models.IntegerField()),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
                ('character_id', models.IntegerField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('group_id', models.IntegerField()),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('permission_id', models.IntegerField()),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
                ('content_type_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Camp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'camp',
            },
        ),
        migrations.CreateModel(
            name='Characters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),  # Should be the same as user table id (1:1 relation)
                ('name', models.CharField(max_length=50)),
                ('strength', models.IntegerField()),
                ('defense', models.IntegerField()),
                ('speed', models.IntegerField()),
                ('agility', models.IntegerField()),
                ('victories', models.IntegerField()),
                ('fight_count', models.IntegerField()),
                ('experience', models.IntegerField()),
                ('gold', models.IntegerField()),
                ('camp', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bow.Camp')),
            ],
            options={
                'db_table': 'characters',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),   # Should be integer but let's do it with names
                ('required_experience', models.IntegerField()),
            ],
            options={
                'db_table': 'level',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.AddField(
            model_name='characters',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='bow.Level'),
        ),
        migrations.RunPython(forwards_func, reverse_func),
    ]
